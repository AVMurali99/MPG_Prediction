y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
c(x[3],x[5],x[7])
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- C(1:20)
my_vector <- C(1:20)
my_vector <- C(20, 1:20)
my_vector <- C(1:20, 20)
my_vector <- c(1:20)
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20,4,5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
TRUE ==TRUE
(FALSE == TRUE) == FALSE
6==7
6 < 7
10 <= 10
5 !=7
!(5 == 7)
!5 == 7
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints>5
which(ints >7)
any(ints<0)
all(ints>0)
library(swirl)
swirl()
q()
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[,19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10)
letters
LETTERS
sample(LETTERS)
flips <- sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(100, size = 1, prob = 0.7)
flips2
sum(flips2)
?rnoem
?rnorm
rnorm(10)
rnorm(10, 100, 25)
rpois(5, 10)
replicate(100, rpois(5.10))
replicate(100, rpois(5,10))
my_pois <- replicate(100, rpois(5,10))
my_pois
cm <- sapply(my_pois, colmeans)
cm <- sapply(my_pois, colMeans)
class(my_pois)
cm<-colMeans(my_pois)
hist(cm)
swirl()
getwd()
library(swirl)
install_from_swirl("Open Intro")
swirl(0)
y<-100
cars$type
sqrt(y)
z<-sqrt(y)
?sqrt
cars
10
range(cars$price)
sum(cars$price)
sum(cars$price)/54
mean(cars$price)
mpg.midsize
sort(mpg.midsize)
mpg.sorted <- sort(mpg.midsize)
19
median(mpg.midsize)
summary(cars$mpgCity)
25
mode(cars$mpgCity)
16.9
16
9
1
169
?stem
stem(cars$mpgCity)
16.9
?mode
19
15
17
sd(mpg.midsize)
sd(mpg.midsize)^2
24
q(0)
q()
library(datasets)
data(mtcars)
head(mtcars)
fit <- lm(mtcars$mpg ~ mtcars$cyl + mtcars$wt)
summary(fit)
str(mtcars)
nf <- factor(mtcars$cyl)
nf
fit <- lm(mtcars$mpg ~ factor(mtcars$cyl) + mtcars$wt)
summary(fit)$coeff
fit <- lm(mtcars$mpg ~ factor(mtcars$cyl))
summary(fit)$coeff
fit <- lm(mtcars$mpg ~ factor(mtcars$cyl) + mtcars$wt)
nfit <- lm(mtcars$mpg ~ factor(mtcars$cyl) + mtcars$wt + factor(mtcars$cyl) * mtcars$wt)
anova(fit, nfit)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
plot(x,y)
fit <- lm(y~x)
hatvalues(fit)
dfbetas(fit)
library(swirl)
rm(list=ls())
swirl()
ones <- rep(1, nrow(galton))
lm(child ~ ones + parent - 1, galton)
lm(child ~ parent, galton)
lm(child ~ 1, galton)
head(trees)
fit <- lm(Volume ~ Girth + Height + Constant -1, trees)
trees2 <- eliminate("Girth", trees)
head(trees2)
fit2 <- lm(Volume ~ Height + Constant -1, trees2)
lapply(list(fit, fit2), coef)
lm(Fertility~., swiss)
all <- lm(Fertility~., swiss)
summary(all)
summary(lm(Fertility ~ Agriculture, swiss))
cor(swiss$Education, swiss$Examination)
cor(swiss$Agriculture, swiss$Education)
makelms()
ec <- swiss$Examination + swiss$Catholic
efit <- lm(Fertility ~ . + ec, swiss)
all$coeff - efit$coeff
coeff(all) - coeff(efit)
coef(all) - coef(efit)
all$coefficients - efit$coefficients
q()
library(swirl)
swirl()
6
dim(InsectSprays)
head(InsectSprays, 15)
sA
summary(InsectSprays[,2])
sapply(InsectSprays[1,], class)
sapply(InsectSprays, class)
fit <- lm(count ~ spray, InsectSprays)
summary(fit)
fit$coef
summary(fit)$coef
est <- summary(fit)$coef[,1]
mean(sA)
mean(sB)
nfit <- lm(count ~ spray - 1, InsectSprays)
summary(nfit)$coef
spray2 <- relevel(InsectSprays$spray, "C")
fit2 <- lm(count ~ spray2, InsectSprays)
summary(fit2)$coef
mean(sC)
(fit$coef[2] - fit$coef[3])/ 1.6011
dim(hunger)
948
names(hunger)
fit <- lm(Numeric ~ Year, hunger)
summary(fit)$coef
lmF <- lm(Numerics ~ Year, hunger[hunger$Sex=="Female"])
lmF <- lm(Numerics ~ Year, hunger[Sex=="Female"])
lmF <- lm(Numerics[hunger$Sex=="Female"] ~ Year[hunger$Sex=="Female"], hunger)
lmF <- lm(Numeric[hunger$Sex=="Female"] ~ Year[hunger$Sex=="Female"], hunger)
lmF <- lm(Numeric[hunger$Sex=="Male"] ~ Year[hunger$Sex=="Male"], hunger)
lmF <- lm(Numeric[hunger$Sex=="Female"] ~ Year[hunger$Sex=="Female"], hunger)
lmM <- lm(Numeric[hunger$Sex=="Male"] ~ Year[hunger$Sex=="Male"], hunger)
lmBoth <- lm(Numeric ~ Year + Sex, hunger)
summary(lmBoth)
lmInter <- lm(Numeric ~ Year + Sex + Sex * Year, hunger)
summary(lmInter)
fit <- lm(y ~ x, out2)
plot(fit, which=1)
fitno <- lm( y ~ x, out2[-1,])
plot(fitno, which=1)
coef(fitno) - coef(fit)
coef(fit) - coef(fitno)
head(dfbeta(fit))
resno <- out2[1, "y"] - predict(fitno, out2[1,])
1-resid(fit)[1]/resno
head(hatvalues(fit))
summary(fit)
sigma <- sqrt(deviance(fit)/df.residual(fit))
rstd <- resid(fit)/sigma*sqrt(1-hatvalues(fit))
rstd <- resid(fit)/(sigma*sqrt(1-hatvalues(fit)))
head(cbind(rstd, rstandard(fit)))
plot(fit, which=3)
plot(fit, which=2)
sigma1 <- sqrt(deviance(fitno)/df.resid(fitno))
sigma1 <- sqrt(deviance(fitno)/df.residual(fitno))
resid(fit)[1]/(sigma1 * sqrt(1-hatvalues(fit)[1]))
head(rstudent(fit))
dy <- predict(fitno, out2) - predict(fit, out2)
sum(dy^2)/(2*sigma^2)
plot(fit, which=5)
rm(list = ls())
datasets(mtcars)
library(datasets)
data(mtcars)
dim(mtcars)
head(mtcars)
?mtcars
str(mtcars)
plot(mtcars$mpg, mtcars$am, col = mtcats$am )
plot(mtcars$mpg, mtcars$am, col = mtcars$am )
plot(mtcars$mpg, mtcars$am)
cor(mtcars$mpg, mtcars$am)
fit <- lm(mpg ~ factor(am), mtcars)
plot(fit, which = 1)
summary(fit)
meanfit <- lm(mpg ~ factor(am) - 1, mtcars)
summary(meanfit)
plot(fit, which = 2)
plot(fit, which = 3)
plot(fit, which = 4)
plot(fit, which = 5)
plot(fit, which = 6)
plot(fit, which = 7)
wfit <- lm(mpg ~ ., mtcars)
summary(wfit)$coef
wfit <- lm(mpg ~ factor(am) + wt, mtcars)
summary(wfit)$coef
wfit <- lm(mpg ~ wt + factor(am), mtcars)
summary(wfit)$coef
summary(fit)$coef
summary(fit)
wintfit <- lm(mpg ~ wt * factor(am), mtcars)
summary(wintfit)$coef
summary(wintfit)
wintfit <- lm(mpg ~ wt * factor(am) - 1, mtcars)
summary(wintfit)
sum(is.na(mtcars))
amf <- factor(mtcars$am, levels = c("Auto", "Manual"))
amf <- as.factor(mtcars$am, levels = c("Auto", "Manual"))
amf
amf <- factor(character(mtcars$am), levels = c("Auto", "Manual"))
amf <- factor(as.character(mtcars$am), levels = c("Auto", "Manual"))
amf
amf <- factor(mtcars$am)
amf <- factor((mtcars$am), labels = c("Auto", "Manual"))
mtcars$amf <- factor((mtcars$am), labels = c("Auto", "Manual"))
plot( mtcars$amf, mtcars$mpg)
mtcars$am <- factor((mtcars$am), labels = c("Auto", "Manual"))
str(mtcars)
cyl <- factor(mtcars$cyl)
mtcars$cyl <- factor(mtcars$cyl, labels = c("4 Cyl", "6 Cyl", "8 Cyl"))
gear <- factor(mtcars$gear)
carb <- factor(mtcars$carb)
mtcars$gear <- factor(mtcars$gear, labels = c("3 Gears", "4 Gears", "5 Gears"))
mtcars$carb <- factor(mtcars$carb)
plot( mtcars$cyl, mtcars$mpg)
plot( mtcars$gear, mtcars$mpg)
plot( mtcars$carb, mtcars$mpg)
plot( mtcars$disp, mtcars$mpg)
plot( mtcars$hp, mtcars$mpg)
plot( mtcars$drat, mtcars$mpg)
plot( mtcars$wt, mtcars$mpg)
plot( mtcars$qsec, mtcars$mpg)
plot( mtcars$vs, mtcars$mpg)
anova(fit, wfit)
anova(fit, meanfit)
anova(fit, wintfit)
pairs(mtcars$mpg ~ .)
pairs(mpg ~ ., mtcars)
whole <- lm(mtcars$mpg ~ .)
whole <- lm(mpg ~ ., mtcars)
summary(whole)
cor(mtcars)
data(mtcars)
cor(mtcars)
cor(mtcars)[1,]
plot(factor(mtcars$am), mtcars$mpg)
plot(factor(mtcars$am, labels = c("Auto", "Manual")), mtcars$mpg)
fit <- lm(mpg ~ factor(am), mtcars)
summary(fit)$coef
fit <- lm(mpg ~ factor(am,labels = c("Auto", "Manual")), mtcars)
summary(fit)$coef
fit <- lm(mpg ~ factor(am), mtcars)
summary(fit)
summary(fit)$r.squared
summary(fit)$adjusted.r.squared
summary(fit)$se
summary(fit)$sigma
summary(fit)$adj.r.squared
wfit <- lm(mpg ~ wt + factor(am), mtcars)
summary(wfit)$adj.r.squared
summary(wfit)$coef
wcfit <- lm(mpg ~ wt + cyl + factor(am), mtcars)
summary(wcfit)$coef
summary(wcfit)$adj.r.squared
summary(wfit)
summary(wcfit)
wcdfit <- lm(mpg ~ wt + cyl + disp + factor(am), mtcars)
summary(wcdfit)$adj.r.squared
summary(wcdfit)
wchfit <- lm(mpg ~ wt + cyl + hp + factor(am), mtcars)
summary(wchfit)
wcdfit <- lm(mpg ~ wt + cyl + drat + factor(am), mtcars)
summary(wcdfit)
wcqfit <- lm(mpg ~ wt + cyl + qsec + factor(am), mtcars)
summary(wcqfit)
wcqfit <- lm(mpg ~ wt + cyl + vs + factor(am), mtcars)
summary(wcqfit)
wcqfit <- lm(mpg ~ wt + cyl + gear + factor(am), mtcars)
summary(wcqfit)
wcqfit <- lm(mpg ~ wt + cyl + carb + factor(am), mtcars)
summary(wcqfit)
plot(wcfit, which =1)
wcqfit <- lm(mpg ~ wt + cyl , mtcars)
summary(wcqfit)
wcqfit <- lm(mpg ~ wt + cyl + disp , mtcars)
summary(wcqfit)
wcqfit <- lm(mpg ~ wt + cyl + hp , mtcars)
summary(wcqfit)
wcqfit <- lm(mpg ~ wt + cyl + carb, mtcars)
summary(wcqfit)
wcqfit <- lm(mpg ~ wt + cyl + gear , mtcars)
summary(wcqfit)
plot(wcfit, which =2)
plot(wcfit, which =3)
plot(wcfit, which =4)
plot(wcfit, which =3)
plot(wcfit, which =2)
dfbeats(wcfit)
dfbetas(wcfit)
hatvalues(wcfit)
library(swirl)
swirl()
all <- lm(Fertility ~ ., swiss)
summary(all)
summary(lm(Fertility ~ Agriculture, swiss))
cor(swiss$Examination, swiss$Education)
cor(swiss$Agriculture, swiss$Education)
makelms()
ec <- swiss$Examination + swiss$Catholic
efit <- lm(Fertility ~ . + ec, swiss)
coef(all) - coef(efit)
all$coefficients-efit$coefficients
6
dim(InsectSprays)
head(InsectSprays, 15)
sA
summary(InsectSprays[,2])
sapply(names(InsectSprays), class())
bye()
swirl()
dim(hunger)
948
names(hunger)
fit <- lm(Numeric ~ Year, hunger)
summary(fit)$coef
lmF <- lm(Numeric ~ Year, hunger[hunger$Sex=="Female"])
lmF <- lm(Numeric[hunger$Sex=="Female"] ~ Year[hunger$Sex=="Female"], hunger)
lmM <- lm(Numeric[hunger$Sex=="Male"] ~ Year[hunger$Sex=="Male"], hunger)
lmBoth <- lm(Numeric ~ Year + Sex, hunger)
summary(lmBoth)
lmInter <- lm(Numeric ~ Year + Sex + Sex * Year, hunger)
summary(lmInter)
cor(mtcars)
cor(mtcars)[9,]
lmInter <- lm(mpg ~ wt * factor(am), mtcars)
summary(lmInter)
summary(fit)$adj.r.squared
summary(wfit)$adj.r.squared
fit <- lm(mpg ~ factor(am), mtcars)
summary(fit)$coef
wfit <- lm(mpg ~ wt + factor(am), mtcars)
summary(wfit)$coef
summary(lmInter)$coef
31.41 - ( 3.78 * 2 )
31.41 - ( 3.78 * 2 ) + 14.88 - (5.3*2)
plot(lmInterfit, which =1)
plot(lmInter, which =1)
plot(lmInter, which =2)
31.41 - ( 3.78 * 3 ) + 14.88 - (5.3*3)
31.41 - ( 3.78 * 3 )
31.41 - ( 3.78 * 4 )
31.41 - ( 3.78 * 4 ) + 14.88 - (5.3*4)
summary(mtcars$wt)
nfit <- lm(mpg ~ wt + drat, mtcars)
summary(nfit)
nfit <- lm(mpg ~ cyl + drat, mtcars)
summary(nfit)
nfit <- lm(mpg ~ disp + drat, mtcars)
summary(nfit)
nfit <- lm(mpg ~ hp + drat, mtcars)
summary(nfit)
summary(fit)
summary(wfit)
summary(lmInter)
q()
q()
setwd("C:/Users/ASHA/Desktop/Coursera/DataProducts/MPG_Prediction")
runApp()
library(shinyapps)
runApp()
library(shiny)
runApp()
data(mtcars)
modFit <- lm(mpg~ wt + cyl + am, data = mtcars)
summary(modFit)$coef
q()
